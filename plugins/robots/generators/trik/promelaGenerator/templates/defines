

/*bool compare_res; 

inline compareStr(str1, str2)
{
	d_step {
		int index = 0;
		compare_res = false;
		if 
		:: (str1.size == str2.size) ->
			for (index : 0 .. str1.size - 1) {
				if 
				:: (str1.a[index] != str2.a[index]) -> 
					goto compare_end;
				:: else -> skip;
				fi;
			}
			compare_res = true;
		:: else -> skip;
		fi;
	compare_end:
	}
}

inline copyStr(dst, src)
{
	d_step {
		int index = 0;
		dst.size = src.size;
		for (index : 0 .. src.size - 1) {
			dst.a[index] = src.a[index]; 
		}
	}
}

inline concatStr(dst, str1, str2)
{	
	d_step {
		int index = 0;
		dst.size = str1.size + str2.size;
		
		for (index : 0 .. str1.size - 1) {
			dst.a[index] = str1.a[index]; 
		}
		
		for (index : 0 .. str2.size - 1) {
			dst.a[str1.size + index] = str2.a[index]; 
		}
	}
}*/